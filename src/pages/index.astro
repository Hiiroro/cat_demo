---
import "../styles/global.css";
---

<html lang="ja">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>猫タスク管理アプリ | 猫の手も借りたい</title>
    <style>
      :root {
        --cat-size: 30px; /* 猫の大きさを小さく */
      }

      body {
        margin: 0;
        overflow: hidden;
        background: #f0f0f0;
        font-family: system-ui, sans-serif;
      }

      #cat-bg {
        position: fixed;
        top: 0;
        left: 0;
        width: 100vw;
        height: 100vh;
        overflow: hidden;
        z-index: -1;
      }

      .cat {
        position: absolute;
        width: var(--cat-size);
        height: auto;
        pointer-events: auto;
        user-select: none;
        left: 0; /* 左端スタート */
      }

      header {
        background: #ffc999;
        padding: 1rem;
        text-align: center;
      }

      header h1 {
        margin: 0;
      }

      nav a {
        margin: 0 1rem;
        text-decoration: none;
        color: #333;
      }

      main {
        text-align: center;
        padding: 2rem;
        position: relative;
        z-index: 10;
      }

      .button {
        display: inline-block;
        padding: 0.75rem 1.5rem;
        background: pink;
        color: #000;
        text-decoration: none;
        border-radius: 8px;
        font-weight: bold;
        transition: background 0.3s;
      }

      .button:hover {
        background: hotpink;
        color: white;
      }

      footer {
        text-align: center;
        padding: 1rem;
        color: #555;
      }
    </style>
  </head>

  <body>
    <div id="cat-bg"></div>

    <header>
      <h1>🐾 猫の手も借りたい</h1>
      <nav>
        <a href="/">ホーム</a>
        <a href="/features">機能</a>
        <a href="/contact">お問い合わせ</a>
      </nav>
    </header>

    <main>
      <h2>かわいい猫と一緒にタスク管理しよう！</h2>
      <p>NekoTaskは、タスクを完了するたびに猫が増える癒し系タスク管理アプリです。</p>
      <a href="https://my-app.yinyoo2904.workers.dev/" class="button">
        アプリを使ってみる
      </a>
    </main>

    <footer>
      <p>© 2025 NekoTask</p>
    </footer>

    <audio id="meow" src="/cat35.mp3" preload="auto"></audio>

    <script>
      const NUM_CATS = 30;
      const MIN_DURATION = 6;
      const MAX_DURATION = 18;
      const CAT_SRC = '/2.png';
      const CAT_SIZE = parseInt(getComputedStyle(document.documentElement).getPropertyValue('--cat-size')) || 30;

      const bg = document.getElementById('cat-bg');
      const sound = document.getElementById('meow');

      let width = window.innerWidth;
      let height = window.innerHeight;

      window.addEventListener('resize', () => {
        width = window.innerWidth;
        height = window.innerHeight;
      });

      const cats = [];

      for (let i = 0; i < NUM_CATS; i++) {
        const el = document.createElement('img');
        el.src = CAT_SRC;
        el.className = 'cat';
        el.alt = '';
        el.draggable = false;

        // 左端に並べる場合は 0、少しバラけさせたい場合は -i*(CAT_SIZE+10)
        const startX = -i * (CAT_SIZE + 10);
        const top = Math.random() * (height - CAT_SIZE);
        el.style.top = `${top}px`;
        el.style.left = '0px';

        const duration = MIN_DURATION + Math.random() * (MAX_DURATION - MIN_DURATION);
        const speed = (width + 200) / duration;

        cats.push({ el, x: startX, speed, top });

        el.addEventListener('click', () => {
          if (sound) {
            sound.currentTime = 0;
            sound.play().catch(() => {});
          }
        });

        bg.appendChild(el);
      }

      let lastTime = performance.now();

      function frame(now) {
        const dt = (now - lastTime) / 1000;
        lastTime = now;

        cats.forEach(cat => {
          cat.x += cat.speed * dt;

          if (cat.x > width + 100) {
            cat.x = -CAT_SIZE; // 左端に戻す
            cat.top = Math.random() * (height - CAT_SIZE);
            cat.el.style.top = `${cat.top}px`;
            const duration = MIN_DURATION + Math.random() * (MAX_DURATION - MIN_DURATION);
            cat.speed = (width + 200) / duration;
          }

          cat.el.style.transform = `translateX(${cat.x}px)`;
        });

        requestAnimationFrame(frame);
      }

      requestAnimationFrame(frame);
    </script>
  </body>
</html>
